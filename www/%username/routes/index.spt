from datetime import timedelta

from liberapay.i18n.base import Month, Year
from liberapay.models.exchange_route import ExchangeRoute
from liberapay.utils import form_post_success, get_participant, utcnow

SIXTY_DAYS = timedelta(days=60)

[---]

participant = get_participant(state, restrict=True)

if request.method == 'POST':
    if 'remove' in request.body:
        route = ExchangeRoute.from_id(participant, request.body.get_int('remove'), _raise=False)
        if route:
            route.invalidate()
    elif 'set_as_default' in request.body:
        route = ExchangeRoute.from_id(participant, request.body.get_int('set_as_default'), _raise=False)
        if route:
            route.set_as_default()
    elif 'set_as_default_for' in request.body:
        try:
            route_id, currency = request.body['set_as_default_for'].split(':')
            route_id = int(route_id)
            if currency == '':
                currency = None
            elif currency not in constants.CURRENCIES:
                raise ValueError(currency)
        except ValueError:
            raise response.invalid_input(request.body['set_as_default_for'], 'set_as_default_for', 'body')
        route = ExchangeRoute.from_id(participant, route_id, _raise=False)
        if route:
            route.set_as_default_for(currency)
    else:
        raise response.error(400, "no known action found in request body")
    form_post_success(state)

routes = website.db.all("""
    SELECT r
         , ( SELECT pi
               FROM payins pi
              WHERE pi.payer = r.participant
                AND pi.route = r.id
                AND pi.status::text NOT LIKE 'pre%%'
           ORDER BY pi.ctime DESC
              LIMIT 1
           ) AS last_payin
      FROM exchange_routes r
     WHERE r.participant = %s
       AND r.network IN ('stripe-card', 'stripe-sdd')
       AND ( r.status IN ('chargeable', 'pending') OR %s )
  ORDER BY r.ctime DESC
""", (participant.id, user.is_acting_as('admin')))

today = utcnow().date()

has_euro_donations = website.db.one("""
    SELECT count(*)
      FROM current_tips
     WHERE tipper = %s
       AND renewal_mode > 0
       AND (amount).currency = 'EUR'
""", (participant.id,)) > 0

title = _("Payment Instruments")

[---] text/html
% extends "templates/layouts/settings.html"

% from "templates/macros/icons.html" import icon with context
% from "templates/macros/payment-methods.html" import card_brands with context

% block content

% if routes
    % if 'success' in request.qs
        % set ntips_awaiting_payment = participant.get_tips_awaiting_payment()[1]
        % if ntips_awaiting_payment
            <div class="alert alert-info">
            {{ ngettext(
                "You have {n} donation awaiting payment.",
                "You have {n} donations awaiting payment.",
                n=ntips_awaiting_payment
            ) }}
            &nbsp;
            <a class="btn btn-primary" href="{{ participant.path('giving/pay') }}">{{
                ngettext("Renew this donation", "Renew these donations", ntips_awaiting_payment)
            }}</a>
            </div>
        % endif
    % endif

    <p>{{ ngettext(
        "You have {n} connected payment instrument.",
        "You have {n} connected payment instruments.",
        n=len(routes)
    ) }}</p>
    <form action="" method="POST">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
    % for route, last_payin in routes
        <div class="payment-instrument{% if route.status not in ('chargeable', 'pending') %} text-muted{% endif %}">
            <span>{{
                icon('payment-card', _("Payment Card"), size=32) if route.network == 'stripe-card' else
                icon('bank-account', _("Bank Account"), size=32) if route.network == 'stripe-sdd' else
                ''
            }}</span>
            <span>
                <strong>{{ route.get_brand() }} {{ route.get_partial_number() }}</strong>
                % if route.country
                    <span class="text-muted">({{ locale.countries.get(route.country, route.country) }})</span>
                % endif
                % if route.currency
                    <span class="text-muted">({{ locale.currencies.get(route.currency, route.currency) }})</span>
                % endif
                % if user.is_acting_as('admin')
                    <span class="monospace text-warning">({{ route.owner_name }})</span>
                % endif
                % if route.is_default
                    &nbsp; <span class="label label-primary" title="{{ _(
                        'This instrument is used by default.'
                    ) }}">{{ _("default") }}</span>
                % elif route.is_default_for
                    &nbsp; <span class="label label-primary" title="{{ _(
                        'This instrument is used by default for payments in {currency}.',
                        currency=Currency(route.is_default_for)
                    ) }}">{{ _(
                        "default for {currency}", currency=route.is_default_for
                    ) }}</span>
                % endif
                % if route.status == 'pending'
                    &nbsp; <span class="label label-warning">{{ _("pending") }}</span>
                % elif route.status != 'chargeable'
                    &nbsp; <span class="label label-default">{{ route.status }}</span>
                % endif
                <br>{{ _("Added on {date}", date=route.ctime.date()) }}
                % if route.network == 'stripe-sdd'
                    (<a href="{{ participant.path('routes/%s/mandate' % route.id) }}">{{ _("view mandate") }}</a>)
                % endif
                % set exp_date = route.get_expiration_date()
                % if exp_date
                    % set exp_date_is_obsolete = (
                        last_payin and last_payin.status == 'succeeded' and
                        last_payin.ctime.date() > exp_date
                    )
                    <br>
                    % if exp_date_is_obsolete
                    <span class="text-muted">{{ _(
                        "Was supposed to expire in {month} {year}",
                        month=Month(exp_date.month), year=Year(exp_date.year),
                    ) }}</span>
                    % elif exp_date < today
                    <span class="text-danger">{{ _(
                        "Expired in {month} {year}",
                        month=Month(exp_date.month), year=Year(exp_date.year),
                    ) }}</span>
                    % else
                    <span class="{{ 'text-warning' if today >= (exp_date - SIXTY_DAYS) else '' }}">{{ _(
                        "Expires in {month} {year}",
                        month=Month(exp_date.month), year=Year(exp_date.year)
                    ) }}</span>
                    % endif
                % endif
                % if last_payin
                    % if last_payin.status == 'failed'
                        <br><span class="text-danger">{{ _(
                            "The last payment initiated on {date} failed.",
                            date=last_payin.ctime.date()
                        ) }}</span>
                    % elif last_payin.status == 'pending'
                        <br><span class="text-info">{{ _(
                            "The last payment initiated on {date} is pending.",
                            date=last_payin.ctime.date()
                        ) }}</span>
                    % elif last_payin.status == 'succeeded'
                        <br><span class="text-success">{{ _(
                            "The last payment initiated on {date} was successful.",
                            date=last_payin.ctime.date()
                        ) }}</span>
                    % endif
                % else
                    <br><span class="text-muted">{{ _("This payment instrument hasn't been used yet.") }}</span>
                % endif
            </span>
            % if route.status in ('chargeable', 'pending')
            <span>
                <button class="btn btn-danger btn-xs" name="remove" value="{{ route.id }}">{{ _("Remove") }}</button>
            % if route.network == 'stripe-card' and not route.is_default
            <button class="btn btn-primary btn-xs" name="set_as_default" value="{{ route.id }}">{{ _("Set as default") }}</button>
            % endif
            % if route.is_default_for
                <button class="btn btn-warning btn-xs"
                        name="set_as_default_for" value="{{ route.id }}:"
                        title="{{ _(
                            'Stop using this instrument by default for payments in {currency}.',
                            currency=Currency(route.is_default_for)
                        ) }}">{{ _(
                    "Unset as default for {currency}", currency=route.is_default_for
                ) }}</button>
            % elif route.network != 'stripe-card' and last_payin and participant.donates_in_multiple_currencies
                <button class="btn btn-primary btn-xs"
                        name="set_as_default_for" value="{{ route.id }}:{{ last_payin.amount.currency }}"
                        title="{{ _(
                            'Use this instrument by default for payments in {currency}.',
                            currency=Currency(last_payin.amount.currency)
                        ) }}">{{ _(
                    "Set as default for {currency}", currency=last_payin.amount.currency
                ) }}</button>
            % endif
            </span>
            % endif
        </div>
    % endfor
    </form>
% else
    <p>{{ _("You don't have any valid payment instrument.") }}</p>
% endif

<br>
<p>{{ _("Add a payment instrument:") }}</p>
<div class="payment-methods">
    <div class="panel panel-default">
        <div class="panel-body overlaid">
            {{ icon('payment-card', size=32) }}
            <h4>{{ _("Credit/Debit Card") }}<br>
                <small>{{ card_brands() }}</small>
            </h4>
            <a class="overlay" href="{{ participant.path('routes/add') }}?type=stripe-card"
                ><span class="sr-only">{{ _("Add a card") }}</span></a>
        </div>
    </div>
    <div class="panel panel-default {{ '' if has_euro_donations and participant.guessed_country in constants.EUROZONE else 'muted' }}">
        <div class="panel-body overlaid">
            {{ icon('bank-account', size=32) }}
            <h4>{{ _("Euro Bank Account") }}<br>
                <small>
                    <span class="text-warning">{{
                        _("Only for donations in euros to recipients in SEPA countries") }}</span><br>
                </small>
            </h4>
            <a class="overlay" href="{{ participant.path('routes/add') }}?type=stripe-sdd"
                ><span class="sr-only">{{ _("Add a bank account") }}</span></a>
        </div>
    </div>
</div>

% endblock
