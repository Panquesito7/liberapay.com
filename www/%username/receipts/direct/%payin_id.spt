from datetime import date

from liberapay.i18n.base import Percent
from liberapay.models.exchange_route import ExchangeRoute
from liberapay.utils import get_participant, render, render_postal_address

[---]

payer = get_participant(state, restrict=True)

payin_id = request.path['payin_id'].split('.html')[0]
try:
    payin_id = int(payin_id)
except ValueError:
    raise response.error(404)

payin = website.db.one("""
    SELECT *
      FROM payins
     WHERE id = %s
       AND payer = %s
       AND amount > 0
       AND status = 'succeeded'
""", (payin_id, payer.id))
if payin is None:
    raise response.error(404)

payer_email = payer.get_email_address()
if not payer_email:
    raise response.error(500, "missing payer email")

payer_identity = payer.get_current_identity() or {}
organization_name = payer_identity.get('organization_name')
headquarters_address = render_postal_address(
    payer_identity.get('headquarters_address'), single_line=True,
)

route = ExchangeRoute.from_id(payer, payin.route)
payer_name = route.get_owner_name() or payer_identity.get('name')

settlement_date = website.db.one("""
    SELECT pe.timestamp::date
      FROM payin_events pe
     WHERE pe.payin = %s
       AND pe.status = 'succeeded'
  ORDER BY pe.timestamp
     LIMIT 1
""", (payin.id,))

if payin.refunded_amount:
    refund_date = website.db.one("""
        SELECT max(ctime)
          FROM payin_refunds
         WHERE payin = %s
           AND status IN ('pending', 'succeeded')
    """, (payin.id,)) or website.db.one("""
        SELECT max(reversal.ctime)
          FROM payin_transfers pt
          JOIN payin_transfer_reversals reversal ON reversal.payin_transfer = pt.id
         WHERE pt.payin = %s
    """, (payin.id,))

payin_transfers = website.db.all("""
    SELECT pt.amount, pt.reversed_amount
         , pt.recipient, recipient.username AS recipient_username
         , pt.team, team.username AS team_name
      FROM payin_transfers pt
      JOIN participants recipient ON recipient.id = pt.recipient
 LEFT JOIN participants team ON team.id = pt.team
     WHERE pt.payin = %s
       AND pt.status = 'succeeded'
""", (payin.id,))

today = date.today()
title = _("liberapay_receipt_{number}", number=str(today)+'_'+str(payin.id))

output.body = render(globals(), allow_partial_i18n=False)

[---] text/html
% extends "templates/layouts/paper.html"

% block content

    <h1>{{ _("Payment receipt") }}</h1>

    <p>{{ _(
        "The payment of {money_amount} initiated on {date} has been received.",
        money_amount=payin.amount,
        date=payin.ctime.date()
    ) }}</p>

    % if payin.amount_settled and payin.amount_settled.currency != payin.amount.currency
    <p>{{ _(
        "The funds were automatically converted from {presentment_currency} to "
        "{settlement_currency} at a rate of {exchange_rate}.",
        presentment_currency=payin.amount.currency,
        settlement_currency=payin.amount_settled.currency,
        exchange_rate=payin.amount_settled.amount / payin.amount.amount
    ) }}</p>
    % endif

    % if payin.refunded_amount == payin.amount
    <p><strong>{{ _(
        "However, the payment was fully refunded on {refund_date}.",
        refund_date=refund_date,
    ) }}</strong></p>
    % else

    % if payin.fee
    <p>{{ _(
        "{0} was paid in processing fees and {1} was distributed as detailed below.",
        payin.fee, payin.amount_settled - payin.fee
    ) }}</p>
    % endif

    % if payin.refunded_amount
    <p><strong>{{ _(
        "However, {x_percent} of the payment ({refund_amount}) was refunded on {refund_date}.",
        x_percent=Percent(payin.refunded_amount / payin.amount),
        refund_amount=payin.refunded_amount, refund_date=refund_date,
    ) }}</strong></p>
    % endif

    <h2>{{ _("Beneficiaries") }}</h2>
    <p>{{ ngettext(
        "The money has been donated to the following recipient:",
        "The money has been donated to the following recipients:",
        n=len(payin_transfers)
    ) }}</p>
    <table class="table table-bordered last-col-right">
        <tr>
            <th>{{ _("Recipient") }}
            <th>{{ _("Amount") }}
        </tr>
    % for pt in payin_transfers
        <tr>
            <td>
            % if pt.team_name
                {{ _(
                    "{recipient}, member of the {team_name} team",
                    recipient=('<a href="%s/~%s">%s</a>'|safe) % (website.canonical_url, pt.recipient, pt.recipient_username),
                    team_name=pt.team_name
                ) }}
            % else
                <a href="{{ website.canonical_url }}/~{{ pt.recipient }}">{{ pt.recipient_username }}</a>
            % endif
            <td>{{ locale.format_money(pt.amount - (pt.reversed_amount or 0)) }}
        </tr>
    % endfor
    </table>
    % endif

    <h2>{{ _("Payer") }}</h2>
    % if payer_name
    {{ _("Name: {0}", payer_name) }}<br>
    % endif
    {{ _("Email address: {0}", payer_email) }}<br>
    % if organization_name
    {{ _("Organization name: {0}", organization_name) }}<br>
    % endif
    % if headquarters_address
    {{ _("Headquarters address: {0}", headquarters_address) }}<br>
    % endif

    <h2>{{ _("Payment details") }}</h2>
    % if route.network == 'stripe-card'
    {{ _(
        "Payment method: {brand} card, number ending in {last4}",
        brand=route.get_brand(), last4=route.get_last4(),
    ) }}
    % elif route.network == 'stripe-sdd'
    {{ _(
        "Payment method: direct debit of bank account {partial_account_number}",
        partial_account_number=route.get_partial_number()
    ) }}
    % else
    {{ _("Payment method: {0}", _(constants.PAYMENT_METHODS[route.network])) }}
    % endif
    <br>
    {{ _("Settlement date: {0}", settlement_date) }}<br>
    {{ _("Transaction ID: {0}", str(payin.id)) }}<br>

    <h2>{{ _("Taxes") }}</h2>
    <p>{{ _(
        "This payment is a donation, no goods or services are to be provided in "
        "exchange, no tax has been collected by Liberapay."
    ) }}</p>

    <footer>
        <div>{{ locale.format_date(today) }}</div>
        <div></div>
        <div></div>
    </footer>

% endblock
