from datetime import timedelta

from liberapay.constants import EVENTS, EVENTS_S
from liberapay.i18n.base import LOCALES_DEFAULT_MAP
from liberapay.utils import form_post_success, get_participant, utcnow
from liberapay.utils.emails import normalize_and_check_email_address

EMAIL_LANGS = dict(sorted([
    (l.tag, l.title(l.display_name)) for l in website.locales.values()
], key=lambda t: t[1]))

[---]

participant = get_participant(state, restrict=True, allow_member=True)

if request.method == 'POST':
    msg = ''
    body = request.body
    if 'set_email_lang' in body:
        email_lang = body['set_email_lang']
        email_lang = LOCALES_DEFAULT_MAP.get(email_lang, email_lang)
        if email_lang not in website.locales:
            raise response.invalid_input(email_lang, 'set_email_lang', 'body')
        participant.set_email_lang(email_lang)
    elif 'add-email' in body or 'resend' in body:
        address = body.get('add-email') or body['resend']
        address = normalize_and_check_email_address(address)
        # Ask for the user's password, if necessary
        password_required = user.has_password and not (
            user.session_type == 'em' or
            user.session_type == 'pw' and
            user.session.mtime > (utcnow() - timedelta(minutes=5))
        )
        if password_required:
            raise response.render('simplates/password-required.spt', state)
        r = participant.add_email(address)
        if not r:
            raise response.error(400, _("You have already added and verified this address."))
        msg = _("A verification email has been sent to {0}.", address)
    elif 'remove' in body:
        participant.remove_email(body['remove'])
    elif 'set-primary' in body:
        participant.update_email(body['set-primary'])
    elif 'events' in body:
        fields = body['events'].split()
        for field in fields:
            event = EVENTS.get(field)
            if not event:
                continue
            participant.update_bit('email_notif_bits', event.bit, body.get(field) == 'on')
        msg = _("Your notification settings have been changed.")
    else:
        raise response.error(400, "no known action found in request body")
    form_post_success(state, msg=msg)

if not participant.email_lang:
    participant.set_email_lang(locale.tag)

title = participant.username
subhead = _("Email settings")
emails = participant.get_emails()
emails.sort(key=lambda e: (
    -(e.address == participant.email),
    e.id
))
email_locale = website.locales.get(participant.email_lang) or website.locales['en']

[---] text/html
% extends "templates/layouts/settings.html"

% from "templates/macros/icons.html" import icon with context
% from "templates/macros/select-lang.html" import lang_options with context

% block content

    <h3>{{ ngettext("Email Address (Private)", "Email Addresses (Private)", len(emails)) }}</h3>

    <form action="" method="POST">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <ul class="emails">
        % for email in emails
            <li class="clearfix">
                <span class="address">{{ email.address }}</span>
                % if email.blacklisted
                    <span class="label label-danger">{{ _("Blacklisted") }}</span>
                    % if participant.email and email.address != participant.email
                    <button name="remove" value="{{ email.address }}" data-on-success="fadeOut:li"
                            class="btn btn-warning btn-sm">{{ _("Remove") }}</button>
                    % endif
                % elif email.address == participant.email
                    <span class="label label-primary">{{ _("Primary") }}</span>
                % else
                    <button name="remove" value="{{ email.address }}" data-on-success="fadeOut:li"
                            class="btn btn-danger btn-sm">{{ _("Remove") }}</button>
                    % if email.disavowed
                        <span class="label label-danger">{{ _("Disavowed") }}</span>
                    % elif not email.verified
                        <span class="label label-warning">{{ _("Unverified") }}</span>
                        <button name="resend" value="{{ email.address }}" data-on-success="notify"
                                class="btn btn-default btn-sm">{{ _("Resend email") }}</button>
                    % else
                        <span class="label label-success">{{ _("Verified") }}</span>
                        <button name="set-primary" value="{{ email.address }}"
                                class="btn btn-primary btn-sm">{{ _("Set as primary") }}</button>
                    % endif
                % endif
            </li>
        % endfor
        </ul>
    </form>

    <form action="" method="POST">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <div class="input-group">
            <input name="add-email" type="email" class="form-control"
                   placeholder="{{ _('Email address') }}" />
            <div class="input-group-btn">
                <button class="btn btn-default">{{ _("Add") }}</button>
            </div>
        </div>
    </form>

    <h3>{{ _("Notifications") }}</h3>

    <form action="" method="POST" data-on-success="notify">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <input type="hidden" name="events" value="{{ EVENTS_S }}" />
        <span>{{ _("Send me notifications via email:") }}</span><br>
        <div class="checkbox">
        % for event in EVENTS.values()
            % set is_on = participant.email_notif_bits.__and__(event.bit)
            <label>
                <input name="{{ event.name }}" type="checkbox" {{ 'checked' if is_on else '' }} />
                {{ _(event.title) }}
            </label>
            <br>
        % endfor
        </div>
        <button class="btn btn-default">{{ _("Save changes") }}</button>
        <br><br>
        <p class="text-info">{{ icon('info-sign') }} {{ _(
            "Some types of notifications cannot be turned off, so they are not "
            "listed above. For example you will always be notified when we are "
            "preparing to debit your bank account."
        ) }}</p>
    </form>

    <br>
    <h4>{{ _("Language") }}</h4>
    <form action="" method="POST" class="form-inline" data-on-success="notify">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <select class="form-control" name="set_email_lang">{{
            lang_options(EMAIL_LANGS, email_locale.tag)
        }}</select>
        <button class="btn btn-default">{{ _("Save") }}</button>
    </form>
    % if email_locale.missing_translations > 0.5
        <br>
        <p class="alert alert-warning">{{ _(
            "The {language} translation of Liberapay is not yet complete, you may "
            "receive emails in English instead.", language=email_locale
        ) }}</p>
    % endif

% endblock
